int => int float bool str complex
float => int(无序四舍五入) float bool str complex
bool => int float bool complex str tuple list set dict
complex => str complex

0 0.0 False None 0+0j 0j () '' [] {} set()

转换为字符串则是直接打印,能转换的是 list tuple set dict 和 Number
字符串转化为列表,元组,集合,单独把每个字符当成元素转化.
字典转化为除字符串外的容器类型,只有键会被作为元素
除dict外其它容器类型都可以相互转换
其中由于集合的无序性,转化为集合或由集合转化成其他容器时,元素的排列是无规律的(纯数字例外)

强转成字典必须是等长的二级容器,且每个二级容器的元素自身都含有两个元素

以下是可转化成字典的例子
listvar = [(1,2),{'a','b'},[3,'c']]
tuplevar = ([1,3])
setvar = {("sa",2),("wae2"),(2,4)}

以下是不可转化成字典的例子
listvar = [(1,2,3),(3,4,4)]
tuplevar = ([1,2],(2,4,5))
setvar = {(1,2),['aew','wefw'],('wefw',23)} #集合的值必须是可哈希的数据

listvar = "作业中的列表"
res = list[-1][-1][-1][-1]['pp']['d']

print(99//4 == 24)
99%4 == 3
-99%4 == 1

res = 某个元素 in list str(必须连续) tuple set dict(字典的键)
或者 not in

() > not(只返回布尔型) > and(一假全假,全真则真) > or(一真全真,全假则假)
Ture or 其他
False and 单一的

res = 17>15 or 78<11 or 7 and 8 and not True is True
True

6
3
True
3
True
True
0
3
0
2